CSS:
$ - первый элемент (FindElement)
$$ - все элементы (FindElements)

ПАРАМЕТРЫ ПОИСКА:
# - идентификаторы (ul#username) - find.By.id("username")   cssSelector("#username")
. - классы (li.error)        - find.By.className("error")   cssSelector(".error")
[название = значение]        - find.By.name("password")     cssSelector("[name = password]")

"[checked]" - только название атрибута
"[name = email]" - название атрибута и значение атрибута
"[title* = Name]" - проверяет частичное совпадение
"[src^ = http]" - проверяет начинается с текста
"[src$ = .pdf]" - проверяет заканчиватся с текста

ПОИСК ПО ЗНАЧЕНИЯМ:
"lable" - по тегу
".error" - по классу
"lable.error" - по тегу и классу
"lable.error.fatal" - по тегу и двум классам одновременно
"lable.error.[for=email]" - по тегу, классу и дополнительному аттрибуту

ПОИСК ОТРИЦАНИЙ:
"lable:not(.error)" - сообщение не об ошибках
"input:not([type = text])" - нетекстовые поля ввода
"a:not([href^=http])" - локальные ссылки

ДВИЖЕНИЯ ПО ДЕРЕВУ:
"div#main p" - нанйти p где-то внутри блока div#main
"div#main > p" - найти p непосредственно внутри div#main
"div#main li:first-child" - поик первого элемента из каждого списка li внутри div#main
"div#main li:last-child" - поик последнего элемента из каждого списка li внутри div#main
"div#main li:nth-child(3)" - поиск заданого по счету элемента из каждого списка li внутри div#main
"div#header > div:nth-of-type(3)" - из всех елементов выбирается нужный тип и среди них нужный по счету